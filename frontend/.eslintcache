[{"/usr/src/app/frontend/src/index.tsx":"1","/usr/src/app/frontend/src/App.tsx":"2","/usr/src/app/frontend/src/theme/mainTheme.ts":"3","/usr/src/app/frontend/src/stores/books.ts":"4","/usr/src/app/frontend/src/containers/BooksContainer/BooksContainer.tsx":"5","/usr/src/app/frontend/src/containers/SingleBookContainer/SingleBookContainer.tsx":"6","/usr/src/app/frontend/src/stores/singleBook.ts":"7","/usr/src/app/frontend/src/containers/RoutesContainer/RoutesContainer.tsx":"8","/usr/src/app/frontend/src/containers/NavigationContainer/NavigationContainer.tsx":"9","/usr/src/app/frontend/src/components/Image/Image.tsx":"10"},{"size":459,"mtime":1612689541745,"results":"11","hashOfConfig":"12"},{"size":1908,"mtime":1613632058013,"results":"13","hashOfConfig":"12"},{"size":456,"mtime":1612689471949,"results":"14","hashOfConfig":"12"},{"size":544,"mtime":1613200888808,"results":"15","hashOfConfig":"12"},{"size":4137,"mtime":1613203559864,"results":"16","hashOfConfig":"12"},{"size":4355,"mtime":1613632196717,"results":"17","hashOfConfig":"12"},{"size":1531,"mtime":1613323622888,"results":"18","hashOfConfig":"12"},{"size":802,"mtime":1613202947696,"results":"19","hashOfConfig":"12"},{"size":1485,"mtime":1613202560372,"results":"20","hashOfConfig":"12"},{"size":943,"mtime":1613631480141,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"gusk1t",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/usr/src/app/frontend/src/index.tsx",[],["44","45"],"/usr/src/app/frontend/src/App.tsx",[],"/usr/src/app/frontend/src/theme/mainTheme.ts",[],"/usr/src/app/frontend/src/stores/books.ts",[],"/usr/src/app/frontend/src/containers/BooksContainer/BooksContainer.tsx",["46"],"import React, { useState, useEffect } from 'react';\nimport { useStore } from \"effector-react\";\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport { useHistory, useRouteMatch, useLocation, useParams } from \"react-router-dom\";\n// components\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\n// store\nimport { $books, getBooksFx } from '../../stores/books';\n\n// types\nimport { BookType } from '../../types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        table: {\n            maxWidth: 800,\n            flex: '1 1',\n        },\n        titleCell: {\n            fontWeight: 600\n        },\n        tableRow: {\n            cursor: 'pointer',\n        },\n        paginateContainer: {\n            maxWidth: 800,\n        },\n        tableContainer: {\n            maxWidth: 800,\n            minHeight: 600,\n            display: 'flex',\n            flexDirection: 'column'\n        }\n    }),\n);\n\nfunction BooksContainer() {\n    const history = useHistory();\n    const routeMatch = useRouteMatch();\n    const location = useLocation();\n    const params = useParams();\n\n    const classes = useStyles();\n    const [page, setPage] = useState<number>(0);\n    const [rowsPerPage, setRowsPerPage] = useState<number>(10);\n\n    const booksStore = useStore($books);\n\n    useEffect(() => {\n        (async () => {\n            await getBooksFx({ skip: page * rowsPerPage, limit: rowsPerPage });\n        })();\n    }, []);\n\n    useEffect(() => {\n        getBooksFx({\n            skip: page * rowsPerPage,\n            limit: rowsPerPage\n        });\n    }, [page, rowsPerPage]);\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    console.log(history)\n    console.log(routeMatch)\n    console.log(location)\n    console.log(params)\n\n    const handleChoosePage = (bookId: number) => {\n        history.push(`/books/${bookId}`);\n    };\n\n    return (\n        <>\n            <Toolbar />\n            <TableContainer className={classes.tableContainer} component={Paper}>\n                <Table className={classes.table} size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Title</TableCell>\n                            <TableCell align=\"left\">Description</TableCell>\n                            <TableCell align=\"left\">Pages</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {booksStore.books.map((book: BookType) => (\n                            <TableRow className={classes.tableRow} hover key={book.book_id} onClick={() => handleChoosePage(book.book_id)}>\n                                <TableCell className={classes.titleCell} component=\"th\" scope=\"row\">\n                                    {book.title}\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    {book.subtitle}\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    {book.pages}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    className={classes.paginateContainer}\n                    component=\"div\"\n                    count={booksStore.count}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    rowsPerPage={rowsPerPage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </TableContainer>\n        </>\n    );\n}\n\nexport { BooksContainer }","/usr/src/app/frontend/src/containers/SingleBookContainer/SingleBookContainer.tsx",["47"],"/usr/src/app/frontend/src/stores/singleBook.ts",[],"/usr/src/app/frontend/src/containers/RoutesContainer/RoutesContainer.tsx",[],"/usr/src/app/frontend/src/containers/NavigationContainer/NavigationContainer.tsx",[],"/usr/src/app/frontend/src/components/Image/Image.tsx",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":62,"column":8,"nodeType":"54","endLine":62,"endColumn":10,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"56","line":48,"column":8,"nodeType":"54","endLine":48,"endColumn":10,"suggestions":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'page' and 'rowsPerPage'. Either include them or remove the dependency array.","ArrayExpression",["60"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [page, rowsPerPage]",{"range":"66","text":"67"},"Update the dependencies array to be: [id]",{"range":"68","text":"69"},[1875,1877],"[page, rowsPerPage]",[1344,1346],"[id]"]