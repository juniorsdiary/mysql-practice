[{"/usr/src/app/frontend/src/index.tsx":"1","/usr/src/app/frontend/src/App.tsx":"2","/usr/src/app/frontend/src/theme/mainTheme.ts":"3","/usr/src/app/frontend/src/stores/books.ts":"4","/usr/src/app/frontend/src/containers/BooksContainer/BooksContainer.tsx":"5","/usr/src/app/frontend/src/containers/SingleBookContainer/SingleBookContainer.tsx":"6","/usr/src/app/frontend/src/stores/singleBook.ts":"7","/usr/src/app/frontend/src/containers/RoutesContainer/RoutesContainer.tsx":"8","/usr/src/app/frontend/src/containers/NavigationContainer/NavigationContainer.tsx":"9","/usr/src/app/frontend/src/components/Image/Image.tsx":"10","/usr/src/app/frontend/src/components/PdfView/PdfView.tsx":"11","/usr/src/app/frontend/src/containers/ReaderContainer/ReaderContainer.tsx":"12","/usr/src/app/frontend/src/containers/AuthorsContainer/AuthorsContainer.tsx":"13","/usr/src/app/frontend/src/stores/authors.ts":"14","/usr/src/app/frontend/src/components/DataTable/DataTable.tsx":"15"},{"size":459,"mtime":1612689541745,"results":"16","hashOfConfig":"17"},{"size":1908,"mtime":1613632058013,"results":"18","hashOfConfig":"17"},{"size":456,"mtime":1612689471949,"results":"19","hashOfConfig":"17"},{"size":611,"mtime":1613825964712,"results":"20","hashOfConfig":"17"},{"size":2358,"mtime":1613901268666,"results":"21","hashOfConfig":"17"},{"size":4865,"mtime":1613900803282,"results":"22","hashOfConfig":"17"},{"size":1595,"mtime":1613900803290,"results":"23","hashOfConfig":"17"},{"size":1029,"mtime":1613844107150,"results":"24","hashOfConfig":"17"},{"size":1466,"mtime":1613822993652,"results":"25","hashOfConfig":"17"},{"size":943,"mtime":1613631480141,"results":"26","hashOfConfig":"27"},{"size":2461,"mtime":1613823833236,"results":"28","hashOfConfig":"17"},{"size":1376,"mtime":1613900803310,"results":"29","hashOfConfig":"17"},{"size":2475,"mtime":1613901119386,"results":"30","hashOfConfig":"17"},{"size":627,"mtime":1613899731902,"results":"31","hashOfConfig":"17"},{"size":4336,"mtime":1613900999738,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"16574va",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"gusk1t",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/src/app/frontend/src/index.tsx",[],[],"/usr/src/app/frontend/src/App.tsx",[],"/usr/src/app/frontend/src/theme/mainTheme.ts",[],"/usr/src/app/frontend/src/stores/books.ts",[],"/usr/src/app/frontend/src/containers/BooksContainer/BooksContainer.tsx",[],"/usr/src/app/frontend/src/containers/SingleBookContainer/SingleBookContainer.tsx",["69"],"import React, { ChangeEvent, useEffect } from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\nimport { useStore } from 'effector-react';\n\n// material ui\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\n// components\nimport { PdfView } from '../../components/PdfView/PdfView';\n\n// stores\nimport { $singleBook, getCertainBook, uploadBook } from '../../stores/singleBook';\n\n// types\nimport { BookType } from '../../types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1),\n            },\n        },\n        input: {\n            display: 'none',\n        },\n        button: {\n            margin: theme.spacing(1),\n        },\n        subtitle: {\n            fontWeight: 600,\n        }\n    }),\n);\n\nconst SingleBookContainer = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const singleBook = useStore<BookType>($singleBook);\n    const { id } = useParams<any>();\n\n    useEffect(() => {\n        (async () => {\n            await getCertainBook(id);\n        })()\n    }, []);\n\n    const handleUploadBook = async (e: ChangeEvent<HTMLInputElement>) => {\n        const formData = new FormData();\n\n        const file = e?.target?.files?.length && e?.target?.files[0];\n        if (file) {\n            formData.append('book', file, file?.name);\n            await uploadBook({ id, data: formData });\n        }\n    }\n\n    const handleReadBook = () => {\n        history.push(`/books/${id}/reader`);\n    }\n\n    return (\n        <>\n            <Toolbar />\n            <Box display=\"flex\">\n                <Box display=\"flex\" flexDirection={'column'}>\n                    <Typography variant=\"h3\" noWrap>\n                        {singleBook.title}\n                    </Typography>\n                    {singleBook.book_id && singleBook.book_link &&\n                        <PdfView sourceDocument={`http://localhost:4000/upload/getBookPage/${singleBook.book_id}`} page={0} />\n                    }\n                </Box>\n                <div className={classes.root}>\n                    {singleBook.book_link ? (\n                        <Button onClick={handleReadBook} variant=\"contained\" color='primary'>\n                            Read Book\n                        </Button>\n                    ) : (\n                        <>\n                            <input\n                                accept=\"application/pdf\"\n                                className={classes.input}\n                                id=\"pdf-button-file\"\n                                type=\"file\"\n                                onChange={handleUploadBook}\n                            />\n                            <label htmlFor=\"pdf-button-file\">\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    component=\"span\"\n                                    className={classes.button}\n                                    startIcon={<CloudUploadIcon />}\n                                >\n                                    Upload Book\n                                </Button>\n                            </label>\n                        </>\n                    )}\n                </div>\n            </Box>\n            <Box>\n                <Typography display='inline' className={classes.subtitle} variant=\"subtitle1\" noWrap>\n                    Subtitle:\n                </Typography>\n                &nbsp;\n                <Typography display='inline' noWrap>\n                    {singleBook.subtitle}\n                </Typography>\n            </Box>\n            <Box>\n                <Typography display='inline' className={classes.subtitle} variant=\"subtitle1\" noWrap>\n                    Authors:\n                </Typography>\n                &nbsp;\n                <Typography display='inline' noWrap>\n                    {singleBook?.authors?.map(author => `${author.first_name} ${author.middle_name || ''} ${author.last_name}`).join(', ') || 'No Authors'}\n                </Typography>\n            </Box>\n            <Box>\n                <Typography display='inline' className={classes.subtitle} variant=\"subtitle1\" noWrap>\n                    Tags:\n                </Typography>\n                &nbsp;\n                <Typography display='inline' noWrap>\n                    {singleBook?.tags?.map(tag => tag.tag_name).join(', ') || 'No Tags'}\n                </Typography>\n            </Box>\n        </>\n    );\n};\n\nexport { SingleBookContainer };","/usr/src/app/frontend/src/stores/singleBook.ts",[],"/usr/src/app/frontend/src/containers/RoutesContainer/RoutesContainer.tsx",["70"],"import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { BooksContainer } from '../BooksContainer/BooksContainer';\nimport { SingleBookContainer } from '../SingleBookContainer/SingleBookContainer';\nimport { ReaderContainer } from '../ReaderContainer/ReaderContainer';\nimport { AuthorsContainer } from '../AuthorsContainer/AuthorsContainer';\n\nconst routes = [\n    { path: '/books', component: BooksContainer },\n    { path: '/books/:id', component: SingleBookContainer },\n    { path: '/books/:id/reader', component: ReaderContainer },\n    { path: '/authors', component: AuthorsContainer },\n    { path: '/authors/:id', component: function SingleAuthor() { return <div>Author Single</div> } },\n];\n\nconst RoutesContainer = () => {\n    return (\n        <Switch>\n            {routes.map(({path, component: Component}) => (\n                <Route key={path} exact path={path}>\n                    <Component />\n                </Route>\n            ))}\n        </Switch>\n    );\n};\n\nexport { RoutesContainer };","/usr/src/app/frontend/src/containers/NavigationContainer/NavigationContainer.tsx",["71"],"import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nconst links = [\n    { href: '/books', title: \"Books\" },\n    { href: '/authors', title: \"Authors\" },\n    { href: '/tags', title: \"Tags\" },\n];\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        drawer: {\n            width: 200,\n            flexShrink: 0,\n        },\n        drawerPaper: {\n            width: 200,\n        },\n        drawerContainer: {\n            overflow: 'auto',\n        }\n    }),\n);\n\nconst NavigationContainer = () => {\n    const classes = useStyles();\n\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n        >\n            <Toolbar />\n            <div className={classes.drawerContainer}>\n                <List>\n                    {links.map(link => (\n                        <ListItem button component={(props) => <Link to={link.href} {...props} />} key={link.href}>\n                            {link.title}\n                        </ListItem>\n                    ))}\n                </List>\n            </div>\n        </Drawer>\n    );\n};\n\nexport { NavigationContainer };","/usr/src/app/frontend/src/components/Image/Image.tsx",[],["72","73"],"/usr/src/app/frontend/src/components/PdfView/PdfView.tsx",[],"/usr/src/app/frontend/src/containers/ReaderContainer/ReaderContainer.tsx",["74"],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useStore } from 'effector-react';\n\n// stores\nimport { $singleBook, getCertainBook } from '../../stores/singleBook';\n\n// components\nimport { PdfView } from '../../components/PdfView/PdfView';\n\n// material\nimport Box from '@material-ui/core/Box';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n// types\nimport { BookType } from '../../types';\n\nconst ReaderContainer = () => {\n    const singleBook = useStore<BookType>($singleBook);\n    const { id } = useParams<any>();\n\n    const [page, setPage] = useState<number>(0);\n\n    useEffect(() => {\n        (async () => {\n            await getCertainBook(id);\n        })();\n    }, []);\n\n    const handleChange = (_: React.ChangeEvent<unknown>, value: number) => {\n        setPage(value);\n    }\n\n    return (\n        <>\n            <Toolbar />\n            <Box>\n                <PdfView\n                    sourceDocument={`http://localhost:4000/upload/getBookPage/${singleBook.book_id}`}\n                    page={page}\n                />\n                <Pagination\n                    count={singleBook.pages}\n                    page={page}\n                    onChange={handleChange}\n                />\n            </Box>\n        </>\n    );\n};\n\nexport { ReaderContainer };","/usr/src/app/frontend/src/containers/AuthorsContainer/AuthorsContainer.tsx",[],"/usr/src/app/frontend/src/stores/authors.ts",[],"/usr/src/app/frontend/src/components/DataTable/DataTable.tsx",[],{"ruleId":"75","severity":1,"message":"76","line":41,"column":29,"nodeType":"77","messageId":"78","endLine":41,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":17,"column":25,"nodeType":"77","messageId":"78","endLine":17,"endColumn":30},{"ruleId":"75","severity":1,"message":"76","line":31,"column":29,"nodeType":"77","messageId":"78","endLine":31,"endColumn":34},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"75","severity":1,"message":"76","line":19,"column":25,"nodeType":"77","messageId":"78","endLine":19,"endColumn":30},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-global-assign","no-unsafe-negation"]